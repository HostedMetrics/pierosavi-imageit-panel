{"version":3,"sources":["../src/imageit_ctrl.js"],"names":["isEqualTo","a","b","undefined","isGreaterThan","isLessThan","getMappingOperators","mappingOperators","getRandomId","Math","random","toString","substr","ValueColorMapping","id","name","operatorName","compareTo","isSensorFontBold","fontColor","bgColor","nameBlink","valueBlink","bgBlink","Sensor","metric","xlocation","ylocation","size","visible","renderValue","valueFormatted","valueUnit","displayName","link_url","resolvedLink","rectangular","valueMappingIds","isBold","unitFormat","decimals","sizeCoefficient","normalizeColor","color","toLowerCase","_","MetricsPanelCtrl","kbn","panelDefaults","colorMappings","colorMappingMap","valueMappings","metricValues","seriesList","series","bgimage","realbgimage","sensors","templateSrv","sizecoefficient","uncache","islocked","islockvisible","operator","fn","isTheFirstRender","ImageItCtrl","$scope","$injector","$sce","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","target","value","datapoints","refreshImage","index","splice","sensor","addEditorTab","unitFormats","getUnitFormats","scope","elem","attrs","ctrl","panelContainer","find","image","querySelector","draggableElement","replace","imageWidth","offsetWidth","imageHeight","offsetHeight","metricMap","keyBy","valueMappingsMap","mapping","mappingOperatorsMap","borderRadius","xlocationStr","ylocationStr","effectiveName","metricValue","valueMapping","mappingOperatorName","mappingId","mappingOperator","realFontColor","realBgColor","normalizeSensor","formatFunc","valueFormats","dragEventSetup","window","interact","isSet","unset","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","event","datax","parseFloat","getAttribute","dx","datay","dy","elementTransform","style","webkitTransform","transform","setAttribute","onend","xpercentage","ypercentage","renderingCompleted","originalValue","split","map","startsWith","endsWith","icon","indexOf","repeatCount","repeat","slice","imgUrl","imgWidth","imgHeight","join","trustAsHtml","subItem","templateUrl"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable import/prefer-default-export */\r\nimport _ from 'lodash';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport './libs/interact';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nconst panelDefaults = {\r\n    colorMappings: [],\r\n    colorMappingMap: [],\r\n    valueMappings: [],\r\n    metricValues: [],\r\n    seriesList: [],\r\n    series: [],\r\n    bgimage: '',\r\n    realbgimage: '',\r\n    sensors: [],\r\n    templateSrv: null,\r\n    sizecoefficient: 20,\r\n    // uncache is a random number added to the img url to refresh it\r\n    uncache: 0,\r\n    islocked: false,\r\n    islockvisible: true\r\n};\r\n\r\nconst mappingOperators = [{\r\n    name: 'equal',\r\n    operator: '=',\r\n    fn: isEqualTo\r\n}, {\r\n    name: 'greaterThan',\r\n    operator: '>',\r\n    fn: isGreaterThan\r\n}, {\r\n    name: 'lessThan',\r\n    operator: '<',\r\n    fn: isLessThan\r\n}];\r\n\r\nlet isTheFirstRender = true;\r\n\r\nexport class ImageItCtrl extends MetricsPanelCtrl {\r\n    constructor($scope, $injector, $sce, templateSrv) {\r\n        super($scope, $injector);\r\n        _.defaults(this.panel, panelDefaults);\r\n        this.templateSrv = templateSrv;\r\n        this.$sce = $sce;\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        const dataListLength = dataList.length;\r\n        this.panel.metricValues = [];\r\n        for (let series = 0; series < dataListLength; series += 1) {\r\n            this.panel.metricValues.push({\r\n                name: dataList[series].target,\r\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\r\n            });\r\n        }\r\n\r\n        if (!isTheFirstRender) {\r\n            this.refreshImage();\r\n        } else {\r\n            isTheFirstRender = false;\r\n        }\r\n\r\n\r\n        this.render();\r\n    }\r\n\r\n    refreshImage() {\r\n        this.panel.uncache = Math.random();\r\n    }\r\n\r\n    deleteSensor(index) {\r\n        this.panel.sensors.splice(index, 1);\r\n    }\r\n\r\n    addSensor() {\r\n        this.panel.sensors.push(\r\n            new Sensor()\r\n        );\r\n        this.render();\r\n    }\r\n\r\n    moveSensorUp(index) {\r\n        const sensor = this.panel.sensors[index];\r\n        this.panel.sensors.splice(index, 1);\r\n        this.panel.sensors.splice(index - 1, 0, sensor);\r\n    }\r\n\r\n    moveSensorDown(index) {\r\n        const sensor = this.panel.sensors[index];\r\n        this.panel.sensors.splice(index, 1);\r\n        this.panel.sensors.splice(index + 1, 0, sensor);\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Sensor', 'public/plugins/pierosavi-imageit-panel/editor.html', 2);\r\n        this.addEditorTab('Value Mapping', 'public/plugins/pierosavi-imageit-panel/mappings.html', 3);\r\n        this.unitFormats = kbn.getUnitFormats();\r\n        this.render();\r\n    }\r\n\r\n    toggleBlock() {\r\n        this.panel.islocked = !this.panel.islocked;\r\n        this.render();\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const panelContainer = (elem.find('.pierosavi-imageit-panel')[0]);\r\n        const image = (panelContainer.querySelector('#imageit-image'));\r\n        const draggableElement = '#imageit_panel' + ctrl.panel.id + '_sensor';\r\n\r\n        function render() {\r\n            if (!ctrl.panel.sensors || (ctrl.panel.bgimage === '')) {\r\n                return;\r\n            }\r\n\r\n            // Replace possible variables in image URL\r\n            ctrl.panel.realbgimage = ctrl.templateSrv.replace(ctrl.panel.bgimage);\r\n\r\n            const imageWidth = image.offsetWidth;\r\n            const imageHeight = image.offsetHeight;\r\n\r\n            const metricMap = _.keyBy(ctrl.panel.metricValues, value => value.name);\r\n            const valueMappingsMap = _.keyBy(ctrl.panel.valueMappings, mapping => mapping.id);\r\n            const mappingOperatorsMap = _.keyBy(mappingOperators, operator => operator.name);\r\n\r\n            for (const sensor of ctrl.panel.sensors) {\r\n                _.defaults(sensor, new Sensor());\r\n\r\n                const sizeCoefficient = sensor.sizeCoefficient ? sensor.sizeCoefficient : ctrl.panel.sizecoefficient;\r\n\r\n                sensor.size = imageWidth * sizeCoefficient / 1600;\r\n\r\n                sensor.borderRadius = sensor.rectangular ? '5%' : '50%';\r\n\r\n                sensor.xlocationStr = (sensor.xlocation * imageWidth / 100) + 'px';\r\n                sensor.ylocationStr = (sensor.ylocation * imageHeight / 100) + 'px';\r\n\r\n                if (sensor.link_url !== undefined) {\r\n                    sensor.resolvedLink = ctrl.templateSrv.replace(sensor.link_url);\r\n                }\r\n\r\n                // We need to replace possible variables in the sensors name\r\n                const effectiveName = ctrl.templateSrv.replace(sensor.metric);\r\n\r\n                const metric = metricMap[effectiveName];\r\n\r\n                const metricValue = (metric !== undefined) ? metric.value : undefined;\r\n\r\n                // update existing valueMappings\r\n                for (const valueMapping of ctrl.panel.valueMappings) {\r\n                    if (valueMapping.mappingOperatorName == null) {\r\n                        valueMapping.mappingOperatorName = mappingOperators[0].name;\r\n                    }\r\n\r\n                    if (valueMapping.id == null) {\r\n                        valueMapping.id = getRandomId();\r\n                    }\r\n                }\r\n\r\n                if (sensor.valueMappingIds === undefined) {\r\n                    sensor.valueMappingIds = [];\r\n                }\r\n\r\n                if (sensor.valueMappingIds.length > 0) {\r\n                    for (const mappingId of sensor.valueMappingIds) {\r\n                        const valueMapping = valueMappingsMap[mappingId];\r\n\r\n                        if (valueMapping === undefined) {\r\n                            break;\r\n                        }\r\n\r\n                        const mappingOperator = mappingOperatorsMap[valueMapping.mappingOperatorName];\r\n\r\n                        if (mappingOperator.fn(metricValue, valueMapping.compareTo)) {\r\n                            sensor.realFontColor = valueMapping.fontColor;\r\n                            sensor.realBgColor = valueMapping.bgColor;\r\n\r\n                            sensor.nameBlink = valueMapping.nameBlink;\r\n                            sensor.valueBlink = valueMapping.valueBlink;\r\n                            sensor.bgBlink = valueMapping.bgBlink;\r\n\r\n                            sensor.isBold = valueMapping.isSensorFontBold;\r\n\r\n                            break;\r\n                        } else {\r\n                            normalizeSensor(sensor);\r\n                        }\r\n                    }\r\n                } else {\r\n                    normalizeSensor(sensor);\r\n                }\r\n\r\n                if (metricValue === undefined) {\r\n                    sensor.valueFormatted = 'Select a sensor metric';\r\n                } else {\r\n                    const formatFunc = kbn.valueFormats[sensor.unitFormat];\r\n                    sensor.valueFormatted = formatFunc(metricValue, sensor.decimals);\r\n                }\r\n            }\r\n\r\n            dragEventSetup();\r\n        }\r\n\r\n        function normalizeSensor(sensor) {\r\n            // new sensor property so it doesn't lose the original one\r\n            // https://github.com/pierosavi/pierosavi-imageit-panel/issues/4\r\n            sensor.realBgColor = sensor.bgColor;\r\n            sensor.realFontColor = sensor.fontColor;\r\n\r\n            sensor.nameBlink = false;\r\n            sensor.valueBlink = false;\r\n            sensor.bgBlink = false;\r\n\r\n            sensor.isBold = false;\r\n        }\r\n\r\n        function dragEventSetup() {\r\n            if (ctrl.panel.islocked) {\r\n                if (window.interact.isSet(draggableElement)) {\r\n                    window.interact(draggableElement).unset();\r\n                }\r\n            } else if (!window.interact.isSet(draggableElement)) {\r\n                window.interact(draggableElement).draggable({\r\n                    // I dont like it personally but this could be configurable in the future\r\n                    inertia: false,\r\n                    restrict: {\r\n                        restriction: '#draggableparent',\r\n                        endOnly: true,\r\n                        elementRect: {\r\n                            top: 0,\r\n                            left: 0,\r\n                            bottom: 1,\r\n                            right: 1\r\n                        }\r\n                    },\r\n                    autoScroll: true,\r\n                    onmove: function (event) {\r\n                        const {target} = event;\r\n                        // keep the dragged position in the data-x/data-y attributes\r\n                        const datax = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\r\n                        const datay = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n                        // translate the element\r\n                        const elementTransform = 'translate(' + datax + 'px, ' + datay + 'px)';\r\n                        target.style.webkitTransform = elementTransform;\r\n                        target.style.transform = elementTransform;\r\n\r\n                        // update the position attributes\r\n                        target.setAttribute('data-x', datax);\r\n                        target.setAttribute('data-y', datay);\r\n                    },\r\n                    onend: function (event) {\r\n                        const {target} = event;\r\n\r\n                        const imageHeight = image.offsetHeight;\r\n                        const imageWidth = image.offsetWidth;\r\n\r\n                        // find sensor with the id from the refId attribute on html\r\n                        const sensor = _.find(ctrl.panel.sensors, {\r\n                            'id': (event.target).getAttribute('refId')\r\n                        });\r\n\r\n                        // get relative distance in px\r\n                        const datax = target.getAttribute('data-x');\r\n                        const datay = target.getAttribute('data-y');\r\n\r\n                        // get percentage of relative distance from starting point\r\n                        const xpercentage = (datax * 100) / imageWidth;\r\n                        const ypercentage = (datay * 100) / imageHeight;\r\n\r\n                        sensor.xlocation += xpercentage;\r\n                        sensor.ylocation += ypercentage;\r\n\r\n                        // reset the starting sensor points\r\n                        target.setAttribute('data-x', 0);\r\n                        target.setAttribute('data-y', 0);\r\n\r\n                        // target.style.webkitTransform = '';\r\n                        target.style.transform = '';\r\n\r\n                        target.style.left = (sensor.xlocation * imageWidth / 100) + 'px';\r\n                        target.style.top = (sensor.ylocation * imageHeight / 100) + 'px';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n\r\n    //------------------\r\n    // Mapping stuff\r\n    //------------------\r\n\r\n    addValueMappingMap() {\r\n        this.panel.valueMappings.push(new ValueColorMapping());\r\n    }\r\n\r\n    removeValueMappingMap(index) {\r\n        this.panel.valueMappings.splice(index, 1);\r\n        this.render();\r\n    }\r\n\r\n    replaceTokens(originalValue) {\r\n        let value = originalValue;\r\n\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        value += '';\r\n        value = value.split(' ').map((a) => {\r\n            if (a.startsWith('_fa-') && a.endsWith('_')) {\r\n                const icon = a.replace(/_/g, '').split(',')[0];\r\n                const color = a.indexOf(',') > -1 ? ` style=\"color:${normalizeColor(a.replace(/_/g, '').split(',')[1])}\" ` : '';\r\n                const repeatCount = a.split(',').length > 2 ? +(a.replace(/_/g, '').split(',')[2]) : 1;\r\n                a = `<i class=\"fa ${icon}\" ${color}></i> `.repeat(repeatCount);\r\n            } else if (a.startsWith('_img-') && a.endsWith('_')) {\r\n                a = a.slice(0, -1);\r\n                const imgUrl = a.replace('_img-', '').split(',')[0];\r\n                const imgWidth = a.split(',').length > 1 ? a.replace('_img-', '').split(',')[1] : '20px';\r\n                const imgHeight = a.split(',').length > 2 ? a.replace('_img-', '').split(',')[2] : '20px';\r\n                const repeatCount = a.split(',').length > 3 ? +(a.replace('_img-', '').split(',')[3]) : 1;\r\n                a = `<img width=\"${imgWidth}\" height=\"${imgHeight}\" src=\"${imgUrl}\"/>`.repeat(repeatCount);\r\n            }\r\n            return a;\r\n        }).join(' ');\r\n\r\n        return this.$sce.trustAsHtml(value);\r\n    }\r\n\r\n    getMappingOperators() {\r\n        return getMappingOperators();\r\n    }\r\n\r\n    setUnitFormat(sensor, subItem) {\r\n        sensor.unitFormat = subItem.value;\r\n        this.render();\r\n    }\r\n\r\n    setBackgroundImage() {\r\n        this.panel.realbgimage = this.templateSrv.replace(this.panel.bgimage);\r\n        this.render();\r\n    }\r\n}\r\n\r\nfunction isEqualTo(a, b) {\r\n    // Could be ok if Im comparing strings and numbers\r\n    // eslint-disable-next-line eqeqeq\r\n    return (a !== undefined && b !== undefined) ? a == b : false;\r\n}\r\n\r\nfunction isGreaterThan(a, b) {\r\n    return (a !== undefined && b !== undefined) ? a > b : false;\r\n}\r\n\r\nfunction isLessThan(a, b) {\r\n    return (a !== undefined && b !== undefined) ? a < b : false;\r\n}\r\n\r\nfunction getMappingOperators() {\r\n    return mappingOperators;\r\n}\r\n\r\nfunction getRandomId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nfunction ValueColorMapping() {\r\n    // TODO: check if it doesnt exist yet\r\n    this.id = getRandomId();\r\n    this.name = undefined;\r\n    this.operatorName = mappingOperators[0].name;\r\n    this.compareTo = undefined;\r\n    this.isSensorFontBold = false;\r\n    this.fontColor = '#000';\r\n    this.bgColor = '#fff';\r\n    this.nameBlink = false;\r\n    this.valueBlink = false;\r\n    this.bgBlink = false;\r\n}\r\n\r\nfunction Sensor() {\r\n    this.metric = '';\r\n    this.xlocation = 50;\r\n    this.ylocation = 25;\r\n    this.bgColor = 'rgba(64,64,64,1.000)';\r\n    this.fontColor = 'rgba(255,255,255,1.000)';\r\n    this.size = 14;\r\n    this.visible = true;\r\n    this.renderValue = true;\r\n    this.valueFormatted = '';\r\n    this.valueUnit = '';\r\n    this.displayName = '';\r\n    this.link_url = '';\r\n    this.resolvedLink = '';\r\n    this.rectangular = true;\r\n    this.valueMappingIds = [];\r\n    this.isBold = false;\r\n    this.id = getRandomId();\r\n    this.unitFormat = 'none';\r\n    this.decimals = 2;\r\n    this.sizeCoefficient = undefined;\r\n}\r\n\r\nfunction normalizeColor(color) {\r\n    if (color.toLowerCase() === 'green') {\r\n        return 'rgba(50, 172, 45, 0.97)';\r\n    }\r\n    if (color.toLowerCase() === 'orange') {\r\n        return 'rgba(237, 129, 40, 0.89)';\r\n    }\r\n    if (color.toLowerCase() === 'red') {\r\n        return 'rgba(245, 54, 54, 0.9)';\r\n    }\r\n    return color.toLowerCase();\r\n}\r\n\r\nImageItCtrl.templateUrl = 'module.html';\r\n"],"file":"imageit_ctrl.js"}